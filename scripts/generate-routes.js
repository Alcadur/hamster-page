const fs = require('fs');

const APP_PATH = './src/app';
const FIRST_LINE_COMMENT = '// That file was generated by src/scripts/generated-routes.js run it again to update';

/**
 * @param {string} basePath
 * @param {string[]} directories
 * @returns {string[]}
 */
function getDirectories(basePath, directories = []) {
    const currentFolders = fs.readdirSync(basePath).filter(name => {
        const stats = fs.lstatSync(`${basePath}/${name}`);

        return stats.isDirectory();
    }).map(name => `${basePath}/${name}`);

    if (!currentFolders.length) {
        return directories;
    }

    directories = [...directories, ...currentFolders];

    currentFolders.forEach(path => {
        directories = getDirectories(path, directories);
    });

    return directories;
}

/**
 * @param {string} path
 * @return {string}
 */
function generateNameFromPath(path) {
    const pathParts = path.substring(1).split('/');
    return pathParts
        .map(pathPart =>
            pathPart.replace(/-/g, '_')
                .replace(/[\[\]]/g, '')
                .toUpperCase())
        .join('__');
}

const folders = getDirectories(APP_PATH)
    .map(path => path.replace(`${APP_PATH}`, ''))
    .sort();

const fileContent = `${FIRST_LINE_COMMENT}
export const ROUTE_INDEX = "/";
${folders.map(path => `export const ROUTE_${generateNameFromPath(path)} = "${path}";`).join('\n')}`;

fs.writeFileSync('./src/config/routes.js', fileContent, { flag: 'w' });